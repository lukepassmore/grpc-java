{"ast":null,"code":"import _asyncToGenerator from \"/Users/luke/Apps/Ionic/Angular2/grpc-java/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-7a8b7a1c.js';\nimport { c as componentOnReady, n as debounce } from './helpers-dd7e4b7b.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nimport { o as openURL, c as createColorClasses } from './theme-ff3fc52f.js';\nconst Route = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n\n    this.url = '';\n  }\n\n  onUpdate(newValue) {\n    this.ionRouteDataChanged.emit(newValue);\n  }\n\n  onComponentProps(newValue, oldValue) {\n    if (newValue === oldValue) {\n      return;\n    }\n\n    const keys1 = newValue ? Object.keys(newValue) : [];\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\n\n    if (keys1.length !== keys2.length) {\n      this.onUpdate(newValue);\n      return;\n    }\n\n    for (const key of keys1) {\n      if (newValue[key] !== oldValue[key]) {\n        this.onUpdate(newValue);\n        return;\n      }\n    }\n  }\n\n  connectedCallback() {\n    this.ionRouteDataChanged.emit();\n  }\n\n  static get watchers() {\n    return {\n      \"url\": [\"onUpdate\"],\n      \"component\": [\"onUpdate\"],\n      \"componentProps\": [\"onComponentProps\"]\n    };\n  }\n\n};\nconst RouteRedirect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n\n  propDidChange() {\n    this.ionRouteRedirectChanged.emit();\n  }\n\n  connectedCallback() {\n    this.ionRouteRedirectChanged.emit();\n  }\n\n  static get watchers() {\n    return {\n      \"from\": [\"propDidChange\"],\n      \"to\": [\"propDidChange\"]\n    };\n  }\n\n};\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\nconst generatePath = segments => {\n  const path = segments.filter(s => s.length > 0).join('/');\n  return '/' + path;\n};\n\nconst chainToPath = chain => {\n  const path = [];\n\n  for (const route of chain) {\n    for (const segment of route.path) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n\n        if (!param) {\n          return null;\n        }\n\n        path.push(param);\n      } else if (segment !== '') {\n        path.push(segment);\n      }\n    }\n  }\n\n  return path;\n};\n\nconst writePath = (history, root, useHash, path, direction, state, queryString) => {\n  let url = generatePath([...parsePath(root), ...path]);\n\n  if (useHash) {\n    url = '#' + url;\n  }\n\n  if (queryString !== undefined) {\n    url = url + '?' + queryString;\n  }\n\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  } else {\n    history.replaceState(state, '', url);\n  }\n};\n\nconst removePrefix = (prefix, path) => {\n  if (prefix.length > path.length) {\n    return null;\n  }\n\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return path;\n  }\n\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i].length > 0 && prefix[i] !== path[i]) {\n      return null;\n    }\n  }\n\n  if (path.length === prefix.length) {\n    return [''];\n  }\n\n  return path.slice(prefix.length);\n};\n\nconst readPath = (loc, root, useHash) => {\n  let pathname = loc.pathname;\n\n  if (useHash) {\n    const hash = loc.hash;\n    pathname = hash[0] === '#' ? hash.slice(1) : '';\n  }\n\n  const prefix = parsePath(root);\n  const path = parsePath(pathname);\n  return removePrefix(prefix, path);\n};\n\nconst parsePath = path => {\n  if (path == null) {\n    return [''];\n  }\n\n  const removeQueryString = path.split('?')[0];\n  const segments = removeQueryString.split('/').map(s => s.trim()).filter(s => s.length > 0);\n\n  if (segments.length === 0) {\n    return [''];\n  } else {\n    return segments;\n  }\n};\n\nconst printRoutes = routes => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n\n  for (const chain of routes) {\n    const path = [];\n    chain.forEach(r => path.push(...r.path));\n    const ids = chain.map(r => r.id);\n    console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n\n  console.groupEnd();\n};\n\nconst printRedirects = redirects => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to)}`, 'font-weight: bold');\n    }\n  }\n\n  console.groupEnd();\n};\n\nconst writeNavState = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (root, chain, direction, index, changed = false, animation) {\n    try {\n      // find next navigation outlet in the DOM\n      const outlet = searchNavNode(root); // make sure we can continue interacting the DOM, otherwise abort\n\n      if (index >= chain.length || !outlet) {\n        return changed;\n      }\n\n      yield new Promise(resolve => componentOnReady(outlet, resolve));\n      const route = chain[index];\n      const result = yield outlet.setRouteId(route.id, route.params, direction, animation); // if the outlet changed the page, reset navigation to neutral (no direction)\n      // this means nested outlets will not animate\n\n      if (result.changed) {\n        direction = ROUTER_INTENT_NONE;\n        changed = true;\n      } // recursively set nested outlets\n\n\n      changed = yield writeNavState(result.element, chain, direction, index + 1, changed, animation); // once all nested outlets are visible let's make the parent visible too,\n      // using markVisible prevents flickering\n\n      if (result.markVisible) {\n        yield result.markVisible();\n      }\n\n      return changed;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  });\n\n  return function writeNavState(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nconst readNavState = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (root) {\n    const ids = [];\n    let outlet;\n    let node = root; // tslint:disable-next-line:no-constant-condition\n\n    while (true) {\n      outlet = searchNavNode(node);\n\n      if (outlet) {\n        const id = yield outlet.getRouteId();\n\n        if (id) {\n          node = id.element;\n          id.element = undefined;\n          ids.push(id);\n        } else {\n          break;\n        }\n      } else {\n        break;\n      }\n    }\n\n    return {\n      ids,\n      outlet\n    };\n  });\n\n  return function readNavState(_x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n\n  return new Promise(resolve => {\n    window.addEventListener('ionNavWillLoad', resolve, {\n      once: true\n    });\n  });\n};\n\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\n\nconst searchNavNode = root => {\n  if (!root) {\n    return undefined;\n  }\n\n  if (root.matches(QUERY)) {\n    return root;\n  }\n\n  const outlet = root.querySelector(QUERY);\n  return outlet ? outlet : undefined;\n};\n\nconst matchesRedirect = (input, route) => {\n  const {\n    from,\n    to\n  } = route;\n\n  if (to === undefined) {\n    return false;\n  }\n\n  if (from.length > input.length) {\n    return false;\n  }\n\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n\n    if (expected === '*') {\n      return true;\n    }\n\n    if (expected !== input[i]) {\n      return false;\n    }\n  }\n\n  return from.length === input.length;\n};\n\nconst routeRedirect = (path, routes) => {\n  return routes.find(route => matchesRedirect(path, route));\n};\n\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let i = 0;\n\n  for (; i < len; i++) {\n    if (ids[i].toLowerCase() !== chain[i].id) {\n      break;\n    }\n  }\n\n  return i;\n};\n\nconst matchesPath = (inputPath, chain) => {\n  const segments = new RouterSegments(inputPath);\n  let matchesDefault = false;\n  let allparams;\n\n  for (let i = 0; i < chain.length; i++) {\n    const path = chain[i].path;\n\n    if (path[0] === '') {\n      matchesDefault = true;\n    } else {\n      for (const segment of path) {\n        const data = segments.next(); // data param\n\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        } else if (data !== segment) {\n          return null;\n        }\n      }\n\n      matchesDefault = false;\n    }\n  }\n\n  const matches = matchesDefault ? matchesDefault === (segments.next() === '') : true;\n\n  if (!matches) {\n    return null;\n  }\n\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, allparams[i]),\n      beforeEnter: route.beforeEnter,\n      beforeLeave: route.beforeLeave\n    }));\n  }\n\n  return chain;\n}; // Merges the route parameter objects.\n// Returns undefined when both parameters are undefined.\n\n\nconst mergeParams = (a, b) => {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\n\nconst routerIDsToChain = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  const plainIDs = ids.map(i => i.id);\n\n  for (const chain of chains) {\n    const score = matchesIDs(plainIDs, chain);\n\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n\n  if (match) {\n    return match.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, ids[i] && ids[i].params)\n    }));\n  }\n\n  return null;\n};\n\nconst routerPathToChain = (path, chains) => {\n  let match = null;\n  let matches = 0;\n\n  for (const chain of chains) {\n    const matchedChain = matchesPath(path, chain);\n\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n\n      if (score > matches) {\n        matches = score;\n        match = matchedChain;\n      }\n    }\n  }\n\n  return match;\n};\n\nconst computePriority = chain => {\n  let score = 1;\n  let level = 1;\n\n  for (const route of chain) {\n    for (const path of route.path) {\n      if (path[0] === ':') {\n        score += Math.pow(1, level);\n      } else if (path !== '') {\n        score += Math.pow(2, level);\n      }\n\n      level++;\n    }\n  }\n\n  return score;\n};\n\nclass RouterSegments {\n  constructor(path) {\n    this.path = path.slice();\n  }\n\n  next() {\n    if (this.path.length > 0) {\n      return this.path.shift();\n    }\n\n    return '';\n  }\n\n}\n\nconst readRedirects = root => {\n  return Array.from(root.children).filter(el => el.tagName === 'ION-ROUTE-REDIRECT').map(el => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')),\n      to: to == null ? undefined : parsePath(to)\n    };\n  });\n};\n\nconst readRoutes = root => {\n  return flattenRouterTree(readRouteNodes(root));\n};\n\nconst readRouteNodes = (root, node = root) => {\n  return Array.from(node.children).filter(el => el.tagName === 'ION-ROUTE' && el.component).map(el => {\n    const component = readProp(el, 'component');\n\n    if (component == null) {\n      throw new Error('component missing in ion-route');\n    }\n\n    return {\n      path: parsePath(readProp(el, 'url')),\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(root, el)\n    };\n  });\n};\n\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n\n  return null;\n};\n\nconst flattenRouterTree = nodes => {\n  const routes = [];\n\n  for (const node of nodes) {\n    flattenNode([], routes, node);\n  }\n\n  return routes;\n};\n\nconst flattenNode = (chain, routes, node) => {\n  const s = chain.slice();\n  s.push({\n    id: node.id,\n    path: node.path,\n    params: node.params,\n    beforeLeave: node.beforeLeave,\n    beforeEnter: node.beforeEnter\n  });\n\n  if (node.children.length === 0) {\n    routes.push(s);\n    return;\n  }\n\n  for (const sub of node.children) {\n    flattenNode(s, routes, sub);\n  }\n};\n\nconst Router = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * By default `ion-router` will match the routes at the root path (\"/\").\n     * That can be changed when\n     *\n     */\n\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n\n    this.useHash = true;\n  }\n\n  componentWillLoad() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.debug('[ion-router] router will load');\n      yield waitUntilNavNode();\n      console.debug('[ion-router] found nav');\n      yield _this.onRoutesChanged();\n    })();\n  }\n\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n\n  onPopState() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const direction = _this2.historyDirection();\n\n      let path = _this2.getPath();\n\n      const canProceed = yield _this2.runGuards(path);\n\n      if (canProceed !== true) {\n        if (typeof canProceed === 'object') {\n          path = parsePath(canProceed.redirect);\n        }\n\n        return false;\n      }\n\n      console.debug('[ion-router] URL changed -> update nav', path, direction);\n      return _this2.writeNavStateRoot(path, direction);\n    })();\n  }\n\n  onBackButton(ev) {\n    ev.detail.register(0, processNextHandler => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n\n\n  canTransition() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const canProceed = yield _this3.runGuards();\n\n      if (canProceed !== true) {\n        if (typeof canProceed === 'object') {\n          return canProceed.redirect;\n        } else {\n          return false;\n        }\n      }\n\n      return true;\n    })();\n  }\n  /**\n   * Navigate to the specified URL.\n   *\n   * @param url The url to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n\n\n  push(url, direction = 'forward', animation) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (url.startsWith('.')) {\n        url = new URL(url, window.location.href).pathname;\n      }\n\n      console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n      let path = parsePath(url);\n      let queryString = url.split('?')[1];\n      const canProceed = yield _this4.runGuards(path);\n\n      if (canProceed !== true) {\n        if (typeof canProceed === 'object') {\n          path = parsePath(canProceed.redirect);\n          queryString = canProceed.redirect.split('?')[1];\n        } else {\n          return false;\n        }\n      }\n\n      _this4.setPath(path, direction, queryString);\n\n      return _this4.writeNavStateRoot(path, direction, animation);\n    })();\n  }\n  /**\n   * Go back to previous page in the window.history.\n   */\n\n\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n\n\n  printDebug() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      console.debug('CURRENT PATH', _this5.getPath());\n      console.debug('PREVIOUS PATH', _this5.previousPath);\n      printRoutes(readRoutes(_this5.el));\n      printRedirects(readRedirects(_this5.el));\n    })();\n  }\n  /** @internal */\n\n\n  navChanged(direction) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this6.busy) {\n        console.warn('[ion-router] router is busy, navChanged was cancelled');\n        return false;\n      }\n\n      const {\n        ids,\n        outlet\n      } = yield readNavState(window.document.body);\n      const routes = readRoutes(_this6.el);\n      const chain = routerIDsToChain(ids, routes);\n\n      if (!chain) {\n        console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n        return false;\n      }\n\n      const path = chainToPath(chain);\n\n      if (!path) {\n        console.warn('[ion-router] router could not match path because some required param is missing');\n        return false;\n      }\n\n      console.debug('[ion-router] nav changed -> update URL', ids, path);\n\n      _this6.setPath(path, direction);\n\n      yield _this6.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n      return true;\n    })();\n  }\n\n  onRedirectChanged() {\n    const path = this.getPath();\n\n    if (path && routeRedirect(path, readRedirects(this.el))) {\n      this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n    }\n  }\n\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n  }\n\n  historyDirection() {\n    const win = window;\n\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n    }\n\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n\n    if (state > lastState || state >= lastState && lastState > 0) {\n      return ROUTER_INTENT_FORWARD;\n    } else if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    } else {\n      return ROUTER_INTENT_NONE;\n    }\n  }\n\n  writeNavStateRoot(path, direction, animation) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!path) {\n        console.error('[ion-router] URL is not part of the routing set');\n        return false;\n      } // lookup redirect rule\n\n\n      const redirects = readRedirects(_this7.el);\n      const redirect = routeRedirect(path, redirects);\n      let redirectFrom = null;\n\n      if (redirect) {\n        _this7.setPath(redirect.to, direction);\n\n        redirectFrom = redirect.from;\n        path = redirect.to;\n      } // lookup route chain\n\n\n      const routes = readRoutes(_this7.el);\n      const chain = routerPathToChain(path, routes);\n\n      if (!chain) {\n        console.error('[ion-router] the path does not match any route');\n        return false;\n      } // write DOM give\n\n\n      return _this7.safeWriteNavState(document.body, chain, direction, path, redirectFrom, 0, animation);\n    })();\n  }\n\n  safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      const unlock = yield _this8.lock();\n      let changed = false;\n\n      try {\n        changed = yield _this8.writeNavState(node, chain, direction, path, redirectFrom, index, animation);\n      } catch (e) {\n        console.error(e);\n      }\n\n      unlock();\n      return changed;\n    })();\n  }\n\n  lock() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      const p = _this9.waitPromise;\n      let resolve;\n      _this9.waitPromise = new Promise(r => resolve = r);\n\n      if (p !== undefined) {\n        yield p;\n      }\n\n      return resolve;\n    })();\n  }\n\n  runGuards(to = this.getPath(), from = parsePath(this.previousPath)) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!to || !from) {\n        return true;\n      }\n\n      const routes = readRoutes(_this10.el);\n      const toChain = routerPathToChain(to, routes);\n      const fromChain = routerPathToChain(from, routes);\n      const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n      const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n      const canLeave = beforeLeaveHook ? yield beforeLeaveHook() : true;\n\n      if (canLeave === false || typeof canLeave === 'object') {\n        return canLeave;\n      }\n\n      const canEnter = beforeEnterHook ? yield beforeEnterHook() : true;\n\n      if (canEnter === false || typeof canEnter === 'object') {\n        return canEnter;\n      }\n\n      return true;\n    })();\n  }\n\n  writeNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this11.busy) {\n        console.warn('[ion-router] router is busy, transition was cancelled');\n        return false;\n      }\n\n      _this11.busy = true; // generate route event and emit will change\n\n      const routeEvent = _this11.routeChangeEvent(path, redirectFrom);\n\n      if (routeEvent) {\n        _this11.ionRouteWillChange.emit(routeEvent);\n      }\n\n      const changed = yield writeNavState(node, chain, direction, index, false, animation);\n      _this11.busy = false;\n\n      if (changed) {\n        console.debug('[ion-router] route changed', path);\n      } // emit did change\n\n\n      if (routeEvent) {\n        _this11.ionRouteDidChange.emit(routeEvent);\n      }\n\n      return changed;\n    })();\n  }\n\n  setPath(path, direction, queryString) {\n    this.state++;\n    writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\n  }\n\n  getPath() {\n    return readPath(window.location, this.root, this.useHash);\n  }\n\n  routeChangeEvent(path, redirectFromPath) {\n    const from = this.previousPath;\n    const to = generatePath(path);\n    this.previousPath = to;\n\n    if (to === from) {\n      return null;\n    }\n\n    const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n    return {\n      from,\n      redirectedFrom,\n      to\n    };\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n};\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\nconst RouterLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n\n    this.routerDirection = 'forward';\n\n    this.onClick = ev => {\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n    };\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    const attrs = {\n      href: this.href,\n      rel: this.rel,\n      target: this.target\n    };\n    return h(Host, {\n      onClick: this.onClick,\n      class: createColorClasses(this.color, {\n        [mode]: true,\n        'ion-activatable': true\n      })\n    }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null)));\n  }\n\n};\nRouterLink.style = routerLinkCss;\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };","map":{"version":3,"sources":["/Users/luke/Apps/Ionic/Angular2/grpc-java/client/node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":["r","registerInstance","e","createEvent","i","getElement","h","H","Host","c","componentOnReady","n","debounce","b","getIonMode","o","openURL","createColorClasses","Route","constructor","hostRef","ionRouteDataChanged","url","onUpdate","newValue","emit","onComponentProps","oldValue","keys1","Object","keys","keys2","length","key","connectedCallback","watchers","RouteRedirect","ionRouteRedirectChanged","propDidChange","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","chainToPath","chain","route","segment","param","params","slice","push","writePath","history","root","useHash","direction","state","queryString","parsePath","undefined","pushState","replaceState","removePrefix","prefix","readPath","loc","pathname","hash","removeQueryString","split","map","trim","printRoutes","routes","console","group","forEach","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","Promise","resolve","result","setRouteId","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","input","expected","routeRedirect","find","matchesIDs","len","Math","min","toLowerCase","matchesPath","inputPath","RouterSegments","matchesDefault","allparams","data","next","mergeParams","beforeEnter","beforeLeave","a","assign","routerIDsToChain","chains","match","maxMatches","plainIDs","score","routerPathToChain","matchedChain","computePriority","level","pow","shift","readRedirects","Array","children","el","tagName","readProp","readRoutes","flattenRouterTree","readRouteNodes","component","Error","componentProps","prop","hasAttribute","getAttribute","nodes","flattenNode","sub","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","componentWillLoad","onRoutesChanged","componentDidLoad","onRedirectChanged","bind","onPopState","historyDirection","getPath","canProceed","runGuards","writeNavStateRoot","onBackButton","ev","detail","register","processNextHandler","back","canTransition","startsWith","URL","location","href","setPath","waitPromise","printDebug","navChanged","warn","safeWriteNavState","win","title","redirectFrom","unlock","lock","p","toChain","fromChain","beforeEnterHook","beforeLeaveHook","canLeave","canEnter","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","routerLinkCss","RouterLink","routerDirection","onClick","routerAnimation","render","mode","attrs","rel","target","class","color","style","ion_route","ion_route_redirect","ion_router","ion_router_link"],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-7a8b7a1c.js';\nimport { c as componentOnReady, n as debounce } from './helpers-dd7e4b7b.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nimport { o as openURL, c as createColorClasses } from './theme-ff3fc52f.js';\n\nconst Route = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n    this.url = '';\n  }\n  onUpdate(newValue) {\n    this.ionRouteDataChanged.emit(newValue);\n  }\n  onComponentProps(newValue, oldValue) {\n    if (newValue === oldValue) {\n      return;\n    }\n    const keys1 = newValue ? Object.keys(newValue) : [];\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\n    if (keys1.length !== keys2.length) {\n      this.onUpdate(newValue);\n      return;\n    }\n    for (const key of keys1) {\n      if (newValue[key] !== oldValue[key]) {\n        this.onUpdate(newValue);\n        return;\n      }\n    }\n  }\n  connectedCallback() {\n    this.ionRouteDataChanged.emit();\n  }\n  static get watchers() { return {\n    \"url\": [\"onUpdate\"],\n    \"component\": [\"onUpdate\"],\n    \"componentProps\": [\"onComponentProps\"]\n  }; }\n};\n\nconst RouteRedirect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n  propDidChange() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  connectedCallback() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  static get watchers() { return {\n    \"from\": [\"propDidChange\"],\n    \"to\": [\"propDidChange\"]\n  }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\nconst generatePath = (segments) => {\n  const path = segments\n    .filter(s => s.length > 0)\n    .join('/');\n  return '/' + path;\n};\nconst chainToPath = (chain) => {\n  const path = [];\n  for (const route of chain) {\n    for (const segment of route.path) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n        if (!param) {\n          return null;\n        }\n        path.push(param);\n      }\n      else if (segment !== '') {\n        path.push(segment);\n      }\n    }\n  }\n  return path;\n};\nconst writePath = (history, root, useHash, path, direction, state, queryString) => {\n  let url = generatePath([\n    ...parsePath(root),\n    ...path\n  ]);\n  if (useHash) {\n    url = '#' + url;\n  }\n  if (queryString !== undefined) {\n    url = url + '?' + queryString;\n  }\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  }\n  else {\n    history.replaceState(state, '', url);\n  }\n};\nconst removePrefix = (prefix, path) => {\n  if (prefix.length > path.length) {\n    return null;\n  }\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return path;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i].length > 0 && prefix[i] !== path[i]) {\n      return null;\n    }\n  }\n  if (path.length === prefix.length) {\n    return [''];\n  }\n  return path.slice(prefix.length);\n};\nconst readPath = (loc, root, useHash) => {\n  let pathname = loc.pathname;\n  if (useHash) {\n    const hash = loc.hash;\n    pathname = (hash[0] === '#')\n      ? hash.slice(1)\n      : '';\n  }\n  const prefix = parsePath(root);\n  const path = parsePath(pathname);\n  return removePrefix(prefix, path);\n};\nconst parsePath = (path) => {\n  if (path == null) {\n    return [''];\n  }\n  const removeQueryString = path.split('?')[0];\n  const segments = removeQueryString.split('/')\n    .map(s => s.trim())\n    .filter(s => s.length > 0);\n  if (segments.length === 0) {\n    return [''];\n  }\n  else {\n    return segments;\n  }\n};\n\nconst printRoutes = (routes) => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n  for (const chain of routes) {\n    const path = [];\n    chain.forEach(r => path.push(...r.path));\n    const ids = chain.map(r => r.id);\n    console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n  console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to)}`, 'font-weight: bold');\n    }\n  }\n  console.groupEnd();\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n  try {\n    // find next navigation outlet in the DOM\n    const outlet = searchNavNode(root);\n    // make sure we can continue interacting the DOM, otherwise abort\n    if (index >= chain.length || !outlet) {\n      return changed;\n    }\n    await new Promise(resolve => componentOnReady(outlet, resolve));\n    const route = chain[index];\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n    // if the outlet changed the page, reset navigation to neutral (no direction)\n    // this means nested outlets will not animate\n    if (result.changed) {\n      direction = ROUTER_INTENT_NONE;\n      changed = true;\n    }\n    // recursively set nested outlets\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n    // once all nested outlets are visible let's make the parent visible too,\n    // using markVisible prevents flickering\n    if (result.markVisible) {\n      await result.markVisible();\n    }\n    return changed;\n  }\n  catch (e) {\n    console.error(e);\n    return false;\n  }\n};\nconst readNavState = async (root) => {\n  const ids = [];\n  let outlet;\n  let node = root;\n  // tslint:disable-next-line:no-constant-condition\n  while (true) {\n    outlet = searchNavNode(node);\n    if (outlet) {\n      const id = await outlet.getRouteId();\n      if (id) {\n        node = id.element;\n        id.element = undefined;\n        ids.push(id);\n      }\n      else {\n        break;\n      }\n    }\n    else {\n      break;\n    }\n  }\n  return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n  return new Promise(resolve => {\n    window.addEventListener('ionNavWillLoad', resolve, { once: true });\n  });\n};\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n  if (!root) {\n    return undefined;\n  }\n  if (root.matches(QUERY)) {\n    return root;\n  }\n  const outlet = root.querySelector(QUERY);\n  return outlet ? outlet : undefined;\n};\n\nconst matchesRedirect = (input, route) => {\n  const { from, to } = route;\n  if (to === undefined) {\n    return false;\n  }\n  if (from.length > input.length) {\n    return false;\n  }\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n    if (expected === '*') {\n      return true;\n    }\n    if (expected !== input[i]) {\n      return false;\n    }\n  }\n  return from.length === input.length;\n};\nconst routeRedirect = (path, routes) => {\n  return routes.find(route => matchesRedirect(path, route));\n};\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let i = 0;\n  for (; i < len; i++) {\n    if (ids[i].toLowerCase() !== chain[i].id) {\n      break;\n    }\n  }\n  return i;\n};\nconst matchesPath = (inputPath, chain) => {\n  const segments = new RouterSegments(inputPath);\n  let matchesDefault = false;\n  let allparams;\n  for (let i = 0; i < chain.length; i++) {\n    const path = chain[i].path;\n    if (path[0] === '') {\n      matchesDefault = true;\n    }\n    else {\n      for (const segment of path) {\n        const data = segments.next();\n        // data param\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        }\n        else if (data !== segment) {\n          return null;\n        }\n      }\n      matchesDefault = false;\n    }\n  }\n  const matches = (matchesDefault)\n    ? matchesDefault === (segments.next() === '')\n    : true;\n  if (!matches) {\n    return null;\n  }\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, allparams[i]),\n      beforeEnter: route.beforeEnter,\n      beforeLeave: route.beforeLeave\n    }));\n  }\n  return chain;\n};\n// Merges the route parameter objects.\n// Returns undefined when both parameters are undefined.\nconst mergeParams = (a, b) => {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\nconst routerIDsToChain = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  const plainIDs = ids.map(i => i.id);\n  for (const chain of chains) {\n    const score = matchesIDs(plainIDs, chain);\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n  if (match) {\n    return match.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, ids[i] && ids[i].params)\n    }));\n  }\n  return null;\n};\nconst routerPathToChain = (path, chains) => {\n  let match = null;\n  let matches = 0;\n  for (const chain of chains) {\n    const matchedChain = matchesPath(path, chain);\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n      if (score > matches) {\n        matches = score;\n        match = matchedChain;\n      }\n    }\n  }\n  return match;\n};\nconst computePriority = (chain) => {\n  let score = 1;\n  let level = 1;\n  for (const route of chain) {\n    for (const path of route.path) {\n      if (path[0] === ':') {\n        score += Math.pow(1, level);\n      }\n      else if (path !== '') {\n        score += Math.pow(2, level);\n      }\n      level++;\n    }\n  }\n  return score;\n};\nclass RouterSegments {\n  constructor(path) {\n    this.path = path.slice();\n  }\n  next() {\n    if (this.path.length > 0) {\n      return this.path.shift();\n    }\n    return '';\n  }\n}\n\nconst readRedirects = (root) => {\n  return Array.from(root.children)\n    .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\n    .map(el => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')),\n      to: to == null ? undefined : parsePath(to),\n    };\n  });\n};\nconst readRoutes = (root) => {\n  return flattenRouterTree(readRouteNodes(root));\n};\nconst readRouteNodes = (root, node = root) => {\n  return Array.from(node.children)\n    .filter(el => el.tagName === 'ION-ROUTE' && el.component)\n    .map(el => {\n    const component = readProp(el, 'component');\n    if (component == null) {\n      throw new Error('component missing in ion-route');\n    }\n    return {\n      path: parsePath(readProp(el, 'url')),\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(root, el)\n    };\n  });\n};\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n  return null;\n};\nconst flattenRouterTree = (nodes) => {\n  const routes = [];\n  for (const node of nodes) {\n    flattenNode([], routes, node);\n  }\n  return routes;\n};\nconst flattenNode = (chain, routes, node) => {\n  const s = chain.slice();\n  s.push({\n    id: node.id,\n    path: node.path,\n    params: node.params,\n    beforeLeave: node.beforeLeave,\n    beforeEnter: node.beforeEnter\n  });\n  if (node.children.length === 0) {\n    routes.push(s);\n    return;\n  }\n  for (const sub of node.children) {\n    flattenNode(s, routes, sub);\n  }\n};\n\nconst Router = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * By default `ion-router` will match the routes at the root path (\"/\").\n     * That can be changed when\n     *\n     */\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n    this.useHash = true;\n  }\n  async componentWillLoad() {\n    console.debug('[ion-router] router will load');\n    await waitUntilNavNode();\n    console.debug('[ion-router] found nav');\n    await this.onRoutesChanged();\n  }\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n  async onPopState() {\n    const direction = this.historyDirection();\n    let path = this.getPath();\n    const canProceed = await this.runGuards(path);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        path = parsePath(canProceed.redirect);\n      }\n      return false;\n    }\n    console.debug('[ion-router] URL changed -> update nav', path, direction);\n    return this.writeNavStateRoot(path, direction);\n  }\n  onBackButton(ev) {\n    ev.detail.register(0, processNextHandler => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n  async canTransition() {\n    const canProceed = await this.runGuards();\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        return canProceed.redirect;\n      }\n      else {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Navigate to the specified URL.\n   *\n   * @param url The url to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n  async push(url, direction = 'forward', animation) {\n    if (url.startsWith('.')) {\n      url = (new URL(url, window.location.href)).pathname;\n    }\n    console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n    let path = parsePath(url);\n    let queryString = url.split('?')[1];\n    const canProceed = await this.runGuards(path);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        path = parsePath(canProceed.redirect);\n        queryString = canProceed.redirect.split('?')[1];\n      }\n      else {\n        return false;\n      }\n    }\n    this.setPath(path, direction, queryString);\n    return this.writeNavStateRoot(path, direction, animation);\n  }\n  /**\n   * Go back to previous page in the window.history.\n   */\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n  async printDebug() {\n    console.debug('CURRENT PATH', this.getPath());\n    console.debug('PREVIOUS PATH', this.previousPath);\n    printRoutes(readRoutes(this.el));\n    printRedirects(readRedirects(this.el));\n  }\n  /** @internal */\n  async navChanged(direction) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\n      return false;\n    }\n    const { ids, outlet } = await readNavState(window.document.body);\n    const routes = readRoutes(this.el);\n    const chain = routerIDsToChain(ids, routes);\n    if (!chain) {\n      console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n      return false;\n    }\n    const path = chainToPath(chain);\n    if (!path) {\n      console.warn('[ion-router] router could not match path because some required param is missing');\n      return false;\n    }\n    console.debug('[ion-router] nav changed -> update URL', ids, path);\n    this.setPath(path, direction);\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n    return true;\n  }\n  onRedirectChanged() {\n    const path = this.getPath();\n    if (path && routeRedirect(path, readRedirects(this.el))) {\n      this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n    }\n  }\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n  }\n  historyDirection() {\n    const win = window;\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n    }\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n    if (state > lastState || (state >= lastState && lastState > 0)) {\n      return ROUTER_INTENT_FORWARD;\n    }\n    else if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    }\n    else {\n      return ROUTER_INTENT_NONE;\n    }\n  }\n  async writeNavStateRoot(path, direction, animation) {\n    if (!path) {\n      console.error('[ion-router] URL is not part of the routing set');\n      return false;\n    }\n    // lookup redirect rule\n    const redirects = readRedirects(this.el);\n    const redirect = routeRedirect(path, redirects);\n    let redirectFrom = null;\n    if (redirect) {\n      this.setPath(redirect.to, direction);\n      redirectFrom = redirect.from;\n      path = redirect.to;\n    }\n    // lookup route chain\n    const routes = readRoutes(this.el);\n    const chain = routerPathToChain(path, routes);\n    if (!chain) {\n      console.error('[ion-router] the path does not match any route');\n      return false;\n    }\n    // write DOM give\n    return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom, 0, animation);\n  }\n  async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    const unlock = await this.lock();\n    let changed = false;\n    try {\n      changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index, animation);\n    }\n    catch (e) {\n      console.error(e);\n    }\n    unlock();\n    return changed;\n  }\n  async lock() {\n    const p = this.waitPromise;\n    let resolve;\n    this.waitPromise = new Promise(r => resolve = r);\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  }\n  async runGuards(to = this.getPath(), from = parsePath(this.previousPath)) {\n    if (!to || !from) {\n      return true;\n    }\n    const routes = readRoutes(this.el);\n    const toChain = routerPathToChain(to, routes);\n    const fromChain = routerPathToChain(from, routes);\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n    if (canLeave === false || typeof canLeave === 'object') {\n      return canLeave;\n    }\n    const canEnter = beforeEnterHook ? await beforeEnterHook() : true;\n    if (canEnter === false || typeof canEnter === 'object') {\n      return canEnter;\n    }\n    return true;\n  }\n  async writeNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, transition was cancelled');\n      return false;\n    }\n    this.busy = true;\n    // generate route event and emit will change\n    const routeEvent = this.routeChangeEvent(path, redirectFrom);\n    if (routeEvent) {\n      this.ionRouteWillChange.emit(routeEvent);\n    }\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\n    this.busy = false;\n    if (changed) {\n      console.debug('[ion-router] route changed', path);\n    }\n    // emit did change\n    if (routeEvent) {\n      this.ionRouteDidChange.emit(routeEvent);\n    }\n    return changed;\n  }\n  setPath(path, direction, queryString) {\n    this.state++;\n    writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\n  }\n  getPath() {\n    return readPath(window.location, this.root, this.useHash);\n  }\n  routeChangeEvent(path, redirectFromPath) {\n    const from = this.previousPath;\n    const to = generatePath(path);\n    this.previousPath = to;\n    if (to === from) {\n      return null;\n    }\n    const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n    return {\n      from,\n      redirectedFrom,\n      to,\n    };\n  }\n  get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = (ev) => {\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n    };\n  }\n  render() {\n    const mode = getIonMode(this);\n    const attrs = {\n      href: this.href,\n      rel: this.rel,\n      target: this.target\n    };\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'ion-activatable': true\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n  }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"]},"metadata":{},"sourceType":"module"}